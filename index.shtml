<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <!--
        <meta http-equiv=Content-Security-Policy content="default-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.paypal.com https://www.googletagmanager.com">
    -->
    <title>The OtoReact Framework</title>
    <meta name="viewport" content="width=device-width">
    <meta name="keywords" content="otoreact,javascript frameworks,reactive html,single page applications,web applications"
    <link rel=preload href="OtoReact.js"            as=script crossorigin>
    <link rel=preload href="KoninklijkeOtolift.png" as=image>
    <!--
        <link rel=preload href="Lib_Components.html"    as=fetch crossorigin>
        <link rel=preload href="C1_Introduction.html"   as=fetch crossorigin>
        <link rel=prefetch href="C2_HtmlElements.html"  as=fetch crossorigin>
        <link rel=prefetch href="C3_Constructs.html"    as=fetch crossorigin>
        <link rel=prefetch href="C4_Scripts.html"       as=fetch crossorigin>
    -->
    <link rel="shortcut icon"   href="otoreact.png" type="image/png"/>
    <link rel="stylesheet"      href="index.css">
    <link rel=preload href="webColors.json"         as=fetch crossorigin>
    <link rel=preload href="dayjs.min.js"           as=fetch crossorigin>

    <script>
        const 
            wiki = "https://en.wikipedia.org/wiki/",
            MDN="https://developer.mozilla.org/en-US/docs/",
            src="./",
            locationExternal = !/masterlist\/(test\/)?otoreact/i.test(location.href);
    
        // Colorcoding
        const mapping = {'<': '&lt;', '&': '&amp;'};
        const markTag = (mTag) =>
            `<span class=mTag>${
                mTag.replace(/\s(?:on|#)\w+\s*=\s*(?:".*?"|'.*?')|(\{(?:\{.*?\}|.)*?\})/gs
                    , (m,mExpr) => mExpr ? `<span class=otored>${m}</span>` : m)
            }</span>`;
        globalThis.ColorCode = function ColorCode(html) {
            return `<div style='color:black'>${
                html.replace(
                    /[<&]/g, c => mapping[c]
                ).replace(
                    /(&lt;!--.*?-->)|(&lt;(script|style).*?>)(.*?)(&lt;\/\3\s*>)|&lt;(\/?\w[^ \t\n>]*)(?:".*?"|'.*?'|.)*?>|\\\{|(\{(?:\{.*?\}|.)*?\})/gis
                    , (m,
                        mComm,      // This is HTML comment
                        mScriptOpen,mScriptTag,mScriptBody,mScriptClose, // These form a <script> or <style> element
                        mTag,       // This is any other tag
                        mExpr       // This is an embedded expression
                        ) =>
                            ( mComm ? `<span class=demoGreen>${m}</span>`   // Mark HTML comments
                            : mScriptTag ? 
                                    markTag(mScriptOpen)                    // Mark <script> tag
                                    + mScriptBody.replace(/\/\/[^\n]*|\/\*.*?\*\//gs, '<span class=demoGreen>$&</span>')
                                    + markTag(mScriptClose)
                            : mTag  ? markTag(m)
                            : mExpr ? `<span class=otored>${m}</span>`
                            : m
                            )
                )
            }</div>`;
        }
        /*
        const orgFetch = globalThis.fetch;
        globalThis.fetch = function(url, init) {
            if (url != "webColors.json") throw "Calling 'fetch' is not allowed in these demo's";
            return orgFetch(url, init);
        }
        delete globalThis.XMLHttpRequest;
        delete globalThis.import;
        */
    </script>
    <script src="samples.js?1" defer></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        if (location.search == '??') localStorage.setItem('PJ', 'true')
        let r = /otoreact\.dev/i.test(location.host) && !localStorage.getItem('PJ');
        function gtag(){
            if(r) dataLayer.push(arguments);
        }
        if (r) {
            /* Global site tag (gtag.js) - Google Analytics */
            document.write('<script async src="https://www.googletagmanager.com/gtag/js?id=G-T23W7PMPX4"><' + '/script>')
            gtag('js', new Date());
            gtag('config', 'G-T23W7PMPX4');
        }
    </script>
    <script type=module>
        import {RCompile, RVAR, docLocation} from './OtoReact.js?2';
        let popup = RVAR('popup', {display: 'none'});
        RCompile(document.body, {bTiming:true, bAbortOnError: false}); 

        docLocation.Subscribe(() => {
            document.title =
                /^(index.html)?$/.test(docLocation.subpath) ? "The OtoReact Framework"
                : /^routing$/i.test(docLocation.subpath)    ? "OtoReact Routing"
                : /^otolib$/i.test(docLocation.subpath)     ? "The OtoLib library"
                : /^download$/i.test(docLocation.subpath)   ? "OtoReact Download"
                : "Page not found";
        }, true);

        let LastModified = null, hdrNoCache = new Headers();
        hdrNoCache.append('Cache-Control', 'no-cache');
        async function CheckForUpdates() {
            let response = await fetch(location.href, LastModified == null
                ? { method: 'HEAD' }
                : { method: 'HEAD', headers: hdrNoCache });
            if (!response.ok)
                return;
            let lm = response.headers.get('Last-Modified');
            if (LastModified == null) {
                LastModified = lm;
                await CheckForUpdates();
            }
            else if (lm != LastModified)
                location.reload();
        }
        setInterval(CheckForUpdates, 5 * 60000);
    </script>
    
</head>
<body onclick="popup.V={display:'none'}" style.cursor=default>
    <script>document.body.hidden=true</script>

    <import src="Lib_Components.html">
        <!-- This component ensures that all <a> elements with no target and an external href, get a target='_blank' attribute -->
        <a href? #target? ...rest><content></content></a>
        
        <!-- Component to demonstrate RHTML -->
        <demo #srctext?="''" #bshow=true #editable?=true rvar?></demo>
        
        <!-- Component that builds a page with header and table of contents-->
        <pageLayout></pageLayout>
    </import>

    <case thisreactson=docLocation #value="docLocation.subpath" hiding>
        <when regmatch="^(index.html)?$">
            <pageLayout>
                <pageHead>
                    <span class=OtoRed>Reactive HTML</span> through the <span class=OtoRed>OtoReact</span> framework
                </pageHead>

                <section>
                    <!-- <include src="C1_Introduction.html"></include> -->
                    <!--#include file="C1_Introduction.html"-->
                </section>
                <section>
                    <!-- <include src="C2_Concepts.html"></include> -->
                    <!--#include file="C2_Concepts.html"-->
                </section>
                <section>
                    <!-- <include src="C3_HtmlElements.html"></include> -->
                    <!--#include file="C3_HtmlElements.html"-->
                </section>
                <section>
                    <!-- <include src="C4_Constructs.html"></include> -->
                    <!--#include file="C4_Constructs.html"-->
                </section>
                <section>
                    <!-- <include src="C5_Scripts.html"></include> -->
                    <!--#include file="C5_Scripts.html"-->
                </section>
            </pageLayout>
        </when>
        <when match="routing">
            <include src="P2_Routing.html"></include>
        </when> 
        <when match="otolib">
            <include src="P3_OtoLib.html"></include>
        </when> 
        <when match="download">
            <include src="P4_Download.html"></include>
        </when>
        <else>
            Page not found
        </else>    
    </case>

    <def rvar="cookiesAck" store="localStorage"></def>
    <if cond="locationExternal && !cookiesAck.V">
        <div style="position: absolute; left: 30px; bottom: 30px;
        background-color: #FFFBE3; 
        border: 4px solid #FFE75B; padding: 8px; border-radius: 4px;
        outline: 8px solid white"
        >
            This site uses cookies from <a href="https://policies.google.com/technologies/cookies">Google Analytics</a> and from <a href="https://www.paypal.com/webapps/mpp/ua/cookie-full">PayPal</a>.
            <button onclick="cookiesAck.V=true">OK</button>
        </div>
    </if>
    <div 
        style="position: absolute; background-color: #FFFBE3; 
            border: 4px solid #FFE75B; padding: 8px; border-radius: 4px;
            outline: 8px solid white"
        +style="popup.V" thisreactson=popup
    >
        You can find more about me on my <a href="https://www.linkedin.com/in/peter-de-bruin-trautmann/">LinkedIn profile</a>,
        <br>and on my <a href="http://www.peterdebruin.net">personal homepage</a> in Dutch
    </div>

</body>
</html>
<!--#include file="Lib_Components.html"-->